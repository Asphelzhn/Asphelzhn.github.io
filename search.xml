<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux常用命令]]></title>
    <url>%2F2018%2F12%2F04%2Fpython01%2F</url>
    <content type="text"><![CDATA[Linux终端命令的重要性 Linux 刚面世时并没有图形界面，所有的操作全靠命令完成，如 磁盘操作、文件存取、目录操作、进程管理、文件权限 设定等 在职场中，大量的 服务器维护工作 都是在 远程 通过 SSH 客户端 来完成的，并没有图形界面，所有的维护工作都需要通过命令来完成 在职场中，作为后端程序员，必须要或多或少的掌握一些 Linux 常用的终端命令 Linux 发行版本的命令大概有 200 多个，但是常用的命令只有 10 多个而已 学习终端命令的技巧： 不需要死记硬背，对于常用命令，用的多了，自然就记住了 不要尝试一次学会所有的命令，有些命令是非常不常用的，临时遇到，临时百度就可以 常用 Linux 命令的基本使用序号命令对应英文作用01lslist查看当前文件夹下的内容02pwdprint wrok directory查看当前所在文件夹03cd [目录名]change directory切换文件夹04touch [文件名]touch如果文件不存在，新建文件05mkdir [目录名]make directory创建目录06rm [文件名]remove删除指定的文件名07clearclear清屏 小技巧ctrl + shift + = 放大终端窗口的字体显示ctrl + - 缩小终端窗口的字体显示 自动补全在敲出 文件／目录／命令 的前几个字母之后，按下 tab 键如果输入的没有歧义，系统会自动补全如果还存在其他 文件／目录／命令，再按一下 tab 键，系统会提示可能存在的命令 小技巧按 上／下 光标键可以在曾经使用过的命令之间来回切换如果想要退出选择，并且不想执行当前选中的命令，可以按 ctrl + c]]></content>
      <categories>
        <category>Python笔记</category>
      </categories>
      <tags>
        <tag>Python - 学习 - 笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NLP1]]></title>
    <url>%2F2018%2F11%2F29%2FNLP1%2F</url>
    <content type="text"><![CDATA[CS224N自然语言处理自然语言处理的目标是让计算机处理或说“理解”自然语言，以完成有意义的任务，比如订机票购物或QA等。完全理解和表达语言是极其困难的，完美的语言理解等效于实现人工智能。 作为输入一共有两个来源，语音与文本。所以第一级是语音识别和OCR或分词。形态分析（Morphological）是分析该词的构造形式（主要针对英语而言，例如，uninterested = un(前缀）+ interest(词干) + ed(后缀)）。句法分析是确定句子的语法结构句子中词汇之间的依存关系。本课程着重讲解句法分析和语义表示。 自然语言处理的应用 拼写检查、关键词检索…… 文本挖掘（产品价格、日期、时间、地点、人名、公司名） 文本分类 机器翻译 客服系统 复杂对话系统 在工业界从搜索到广告投放、自动\辅助翻译、情感舆情分析、语音识别、聊天机器人等。 人类语言的特殊之处与信号处理、数据挖掘不同，自然语言的随机性小而目的性强；语言是用来传输有意义的信息的，这种传输连小孩子都能很快学会。人类语言是离散的、明确的符号系统。但又允许出现各种变种，比如颜文字，随意的错误拼写“I loooove it”。这种自由性可能是因为语言的可靠性（赘余性）。所以说语言文字绝对不是形式逻辑或传统AI的产物。语言符号有多种形式（声音、手势、书写），在这些不同的形式中，其意义保持不变。虽然人类语言是明确的符号系统，但符号传输到大脑的过程是通过连续的声学光学信号，大脑编码似乎是连续的激活值上的模式。另外巨大的词表也导致数据稀疏，不利于机器学习。这构成一种动机，是不是应该用连续的信号而不是离散的符号去处理语言。 因为NVDIA官网即使是科学上网也经常崩，所以把百度网盘连接分享到文件里，需要的可以自取，密码ia9l 安装过程只要要三步： （1）下载并安装cuda9.1 （2）下载并安装cudnn7.1 (3) 下载并安装annaconda3-5.1.0 注意：1.查看cuda能否安装成功：在cmd(win+r)中输入：nvcc -V 2.安装cudnn7.0详细方法： 将cudnn压缩包中所有文件放入1C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0 目录下对应目录中，同时将1C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\extras\CUPTI\libx64\cupti64_91.dll 拷贝到1C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin CUDA环境测试CMD中输入1nvcc -V 如果成功出现下图，则说明CUDA和Cudnn已经配置成功 安装tensorflow打开Anaconda Prompt，创建tensorflow虚拟环境1conda create -n tensorflow python=3.5 然后启用虚拟环境1activate tensorflow 最后安装tensorflow1pip install tensorflow-gpu 如果安装速度较慢，可以使用清华大学开源软件镜像站的TensorFlow 镜像。 测试tensorflow安装情况在刚才的Anaconda Prompt中输入1Python 在Python的交互界面中输入12345import tensorflow as tfhello=tf.constant(&apos;Hello tensorflow!&apos;)sess=tf.Session()sess.run(hello)sess.close() 然后激动人心的时刻，我们可以使用TF了。 可能出现的问题 找不到cudart64_90.dll: ImportError: DLL loaded failed: 找不到指定模块出现上述问题是显卡驱动没有更新，手动到NVDIA对应网站下载对应显卡最新驱动安装，即可。 额外内容为了方便之后的开发，我们可以安装Spyder这款十分强大的科学计算IDE。首先添加清华大学镜像源12conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --set show_channel_urls yes 然后1conda install spyder 记得输入Yes，这样进行深度学习的环境就配置好了。 To be continue。。。]]></content>
      <categories>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>NLP - 学习 - 笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客正式上线]]></title>
    <url>%2F2018%2F09%2F20%2Ffirst%20blog%2F</url>
    <content type="text"><![CDATA[博客正式上线说了好久的博客现在终于用上了，准备记录一下自己研究生期间的所学和所思所想吧。也把个人博客作为展示自己的一个平台，为之后工作、科研做些积累。 A Good Programmer’s abilityA fool can write code that a computer can understand.Good programmers write code that humans can understand. Hexo tutorialsQuick startCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>随感</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>感想 - 日志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tensorflow内核学习]]></title>
    <url>%2F2018%2F09%2F20%2Ftensor%2F</url>
    <content type="text"><![CDATA[Tensorflow内核探究1研究生期间要做的课题是深度学习inference任务的加速和调度问题，因为已经有很多不错的开源深度学习框架（Tensorflow，Pytorch2，Caffe2。。。），所以想在框架的基础上来做调度器和加速。然后Google大法确实厉害，有很多充足的文档、资料和论文实现，所以决定以Tensorflow入手，最近在学习Tensorflow的相关实现和原理，想在这篇博客里总结一下所学。 Tensorflow GPU版本安装要安装进行train，inference加速，我们需要一块好的GPU。如果你有NVDIA 1080 Ti或者NVDIA TitanX，那加速效果可能达到10——20倍，效果是很直观的。其他Nvdia显卡也可以，只是性能没有这么好。可以在NVDIA官网查看市面上常用显卡的计算性（使用Tensorflow GPU版本需要大于等于3.0以上的显卡）Nvdia显卡计算性 安装包准备安装的Tensorflow为V1.8版本，需要CUDA9.0和Cudnn7.1，推荐使用Anaconda来使用Tensorflow。anaconda3-5.1.0-windows10cuda-9.1-windows10cudnn-7.1-windows10关于Tensorflow和CUDA，Cudnn的版本对应关系可以参考下图。 Tensorflow版本 CUDA版本 Cudnn版本 Python版本 1.1-1.2 8.0 v5.1 3.5 1.3 8.0 v6，V6.1 3.5，3.6 1.4 8.0 V6.1 3.5，3.6 1.5-1.8 9.0 V7.0 3.5，3.6 因为NVDIA官网即使是科学上网也经常崩，所以把百度网盘连接分享到文件里，需要的可以自取，密码ia9l 安装过程只要要三步： （1）下载并安装cuda9.1 （2）下载并安装cudnn7.1 (3) 下载并安装annaconda3-5.1.0 注意：1.查看cuda能否安装成功：在cmd(win+r)中输入：nvcc -V 2.安装cudnn7.0详细方法： 将cudnn压缩包中所有文件放入1C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0 目录下对应目录中，同时将1C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\extras\CUPTI\libx64\cupti64_91.dll 拷贝到1C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin CUDA环境测试CMD中输入1nvcc -V 如果成功出现下图，则说明CUDA和Cudnn已经配置成功 安装tensorflow打开Anaconda Prompt，创建tensorflow虚拟环境1conda create -n tensorflow python=3.5 然后启用虚拟环境1activate tensorflow 最后安装tensorflow1pip install tensorflow-gpu 如果安装速度较慢，可以使用清华大学开源软件镜像站的TensorFlow 镜像。 测试tensorflow安装情况在刚才的Anaconda Prompt中输入1Python 在Python的交互界面中输入12345import tensorflow as tfhello=tf.constant(&apos;Hello tensorflow!&apos;)sess=tf.Session()sess.run(hello)sess.close() 然后激动人心的时刻，我们可以使用TF了。 可能出现的问题 找不到cudart64_90.dll: ImportError: DLL loaded failed: 找不到指定模块出现上述问题是显卡驱动没有更新，手动到NVDIA对应网站下载对应显卡最新驱动安装，即可。 额外内容为了方便之后的开发，我们可以安装Spyder这款十分强大的科学计算IDE。首先添加清华大学镜像源12conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --set show_channel_urls yes 然后1conda install spyder 记得输入Yes，这样进行深度学习的环境就配置好了。 To be continue。。。]]></content>
      <categories>
        <category>Tensorflow</category>
      </categories>
      <tags>
        <tag>Deep learning</tag>
        <tag>科研 - 学习</tag>
      </tags>
  </entry>
</search>
